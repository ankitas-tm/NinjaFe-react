{"ast":null,"code":"var _jsxFileName = \"/Users/aj-ankita/Documents/NinjaFe-react/src/component/CustomCheckbox.js\";\nimport React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomCheckbox(_ref) {\n  let {\n    items,\n    changeFun,\n    targetedData\n  } = _ref;\n  console.log(items, \"items\");\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: items.name,\n        value: items.email,\n        checked: targetedData.includes(items.email),\n        onChange: changeFun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this),\n      label: items.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = CustomCheckbox;\nCustomCheckbox.propTypes = {\n  items: PropTypes.array,\n  changeFun: PropTypes.func,\n  targetedData: PropTypes.array\n};\nexport default CustomCheckbox;\nvar _c;\n$RefreshReg$(_c, \"CustomCheckbox\");","map":{"version":3,"names":["React","FormGroup","FormControlLabel","Checkbox","PropTypes","jsxDEV","_jsxDEV","CustomCheckbox","_ref","items","changeFun","targetedData","console","log","children","control","name","value","email","checked","includes","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","propTypes","array","func","$RefreshReg$"],"sources":["/Users/aj-ankita/Documents/NinjaFe-react/src/component/CustomCheckbox.js"],"sourcesContent":["import React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport PropTypes from 'prop-types';\n\n\nfunction CustomCheckbox({items, changeFun, targetedData}) {\n    console.log(items,\"items\")\n    return (\n        <FormGroup>\n            <FormControlLabel control={\n                <Checkbox \n                    name={items.name}  \n                    value={items.email}\n                    checked={targetedData.includes(items.email)}\n                    onChange={changeFun}\n                />\n            } \n            label={items.name} />\n        </FormGroup>\n    )\n}\n\nCustomCheckbox.propTypes = {\n    items: PropTypes.array,\n    changeFun: PropTypes.func,\n    targetedData: PropTypes.array\n};\n\nexport default CustomCheckbox;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,gBAAgB,EAAEC,QAAQ,QAAQ,eAAe;AACrE,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,SAASC,cAAcA,CAAAC,IAAA,EAAmC;EAAA,IAAlC;IAACC,KAAK;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACpDI,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAC,OAAO,CAAC;EAC1B,oBACIH,OAAA,CAACL,SAAS;IAAAa,QAAA,eACNR,OAAA,CAACJ,gBAAgB;MAACa,OAAO,eACrBT,OAAA,CAACH,QAAQ;QACLa,IAAI,EAAEP,KAAK,CAACO,IAAK;QACjBC,KAAK,EAAER,KAAK,CAACS,KAAM;QACnBC,OAAO,EAAER,YAAY,CAACS,QAAQ,CAACX,KAAK,CAACS,KAAK,CAAE;QAC5CG,QAAQ,EAAEX;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CACJ;MACDC,KAAK,EAAEjB,KAAK,CAACO;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEpB;AAACE,EAAA,GAfQpB,cAAc;AAiBvBA,cAAc,CAACqB,SAAS,GAAG;EACvBnB,KAAK,EAAEL,SAAS,CAACyB,KAAK;EACtBnB,SAAS,EAAEN,SAAS,CAAC0B,IAAI;EACzBnB,YAAY,EAAEP,SAAS,CAACyB;AAC5B,CAAC;AAED,eAAetB,cAAc;AAAC,IAAAoB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}